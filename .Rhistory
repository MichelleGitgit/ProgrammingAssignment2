pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
}
list.files("specdata")
list.files("directory")
list.files("specdata/specdata")
file001<-read.csv("001.csv")
file001<-read.csv(directory, "001.csv")
file001<-read.csv("specdata/001.csv")
file001<-read.csv("specdata/specdata/001.csv")
head(file001)
str(file001)
str("specdata/specdata/002.csv")
summary(file001)
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata", full.names=TRUE)
}
files_full
files_full<-list.files("specdata", full.names=TRUE)
files_full
files_full<-list.files("specdata/specdata", full.names=TRUE)
files_full
head(read.csv(files_full[4]))
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
}
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
dat<-data.frame()
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
dat
dat<-data.frame()
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
dat<-data.frame()
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
?mean
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
dat<-data.frame()
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
dat_subset<-dat[which(dat[,"Pollutant"] == pollutant),]
mean(dat_subset[, "Pollutant"], na.rm=TRUE)
}
pollutantmean(directory, "sulfate", 1:10)
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
dat<-data.frame()
for(i in 1:332){
dat<-rbind(dat, read.csv(files_full[i]))
}
print(dat)
}
pollutantmean(directory, "sulfate", 1:10)
directory<-"specdata"
id<-5:2
files<-list.files(directory, full.names=TRUE)
files[id]
directory<-"./specdata"
id<-5:2
files<-list.files(directory, full.names=TRUE)
files[id]
directory<-"./specdata/specdata"
id<-5:2
files<-list.files(directory, full.names=TRUE)
files[id]
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
dat<-data.frame()
for(i in id){
dat<-rbind(dat, read.csv(files_full[i]))
}
mean(dat[, "Pollutant", na.rm=TRUE])
}
pollutantmean("specdata", "nitrate", 23)
source(pm2.R)
source("pm2.R")
pollutantmean("specdata", "nitrate", 23)
dat<-rbind(dat, read.csv(files_full[i]))
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
dat<-data.frame()
for(i in id){
dat<-rbind(dat, read.csv(files_full[i]))
}
mean(dat[, "Pollutant", na.rm=TRUE])
}
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
dat<-data.frame()
for(i in id){
dat<-rbind(dat, read.csv(files_full[i]))
}
mean(dat[, pollutant, na.rm=TRUE])
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
dat<-data.frame()
for(i in id){
dat<-rbind(dat, read.csv(files_full[i]))
}
mean(dat[data[,pollutant], na.rm=TRUE])
}
pollutantmean("specdata", "nitrate", "23")
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files(directory, full.names=TRUE)
dat<-data.frame()
for(i in id){
dat<-rbind(dat, read.csv(files_full[i]))
}
mean(dat[data[,pollutant], na.rm=TRUE])
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-function(x=1:332){print(x)}
##files_full<-list.files("specdata/specdata", full.names=TRUE)
}
pollutantmean("specdata", "nitrate", 3)
pollutantmean<-function(directory, pollutant, id=1:332){
directory <- ("./specdata/")
pollutant<-c("sulfate", "nitrate")
id<-1:332
files_full<-list.files("specdata/specdata", full.names=TRUE)
}
dim(files_full)
dir(files_full)
source("pm3.R")
source("pm3.R")
mymergedata=multmerge(directory)
source("pm3.R")
mymergedata=multmerge(directory)
mymergedata=multmerge("specdata")
mymergedata=multmerge("specdata/specdata")
mymergedata=multmerge("./specdata/specdata")
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm.2")
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
getwd()
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source("pm2.R")
source("pm2.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
getwd()
source("pm3.R")
source("pm3.R")
source("pm3.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm3.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm3.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm3.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm3.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
source("pm4.R")
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
?newRead
?formatC
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
?mean
source("pm4.R")
source("pm4.R")
pollutantmean("specdata", "nitrate", 70:72)
?return
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source(complete1.R)
source("complete1.R")
source("complete1.R")
bigdata=read.csv(paste(directory,formatC(i,width=3,flag="0"),".csv",sep=""))
dat<-rbind(dat, bigdata)
bad<-is.na(dat)
dat[!bad]
source("complete1.R")
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
source("complete1.R")
complete("specdata", 3:5)
head(directory[1])
head("./specdata/specdata/001.csv")
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
complete("specdata", 3:5)
source("complete1.R")
complete("specdata", 1)
source("complete2.R")
complete("specdata", 1)
source("complete2.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete2.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete2.R")
source("complete2.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete2.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
directory <- "C:/RProgramming/specdata/specdata/" ##directory of files
bigdata=read.csv(paste(directory, "/", formatC(id[i],width=3,flag="0"),".csv",sep=""))
newbigdata<-na.omit(bigdata)
source("corr1.R")
source("corr1.R")
source("complete.R")
cr<-corr("specdata", 150)
head(bigdata)
head("C:/RProgramming/specdata/specdata/001.csv")
source("complete.R")
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
source("corr1.R")
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("corr1.R")
cr<-corr("specdata", 150)
source("play4.R")
cr<-corr("specdata", 150)
source("play4.R")
cr<-corr("specdata", 150)
?fname
source("play5.R")
cr<-corr("specdata", 150)
cube<-function(x,n){
x^3
}
cube(3)
x<-1:10
if(x>5){
x<-0
}
g<-function(y){
y+z
}
z<-4
x+g(x)
}
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
z<10
f(3)
z<-10
f(3)
x<-5
y<-if(x<3){
NA
} else{
10
}
y
source("corr2.R")
cr<-corr("specdata", 150)
source("corr2.R")
cr<-corr("specdata", 150)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
source("corr3.R"
)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr3.R")
source("complete.R")
cr <- corr3("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
submit()
10
submit()
x <- list(a=1:5, b=rnorm(10))
lapply(x, mean)
$a
x <- list(a=1:5, b=rnorm(10))
lapply(x, mean)
x <- list(a=1:5, b=rnorm(10))
lapply(x, mean)
x<-list(a=matrix(1:4, 2,2), b(1:6, 3, 2))
x
x<- c(1:11) ## creates a vector with #s 1-11
min(x) ##displays the minimum value of x
max(x) ##displays the maximum value of x
median(x) ##displays the median value of x
x<- x[-c(5,6)] ##removes the 5th and 6th elem
x
which (x>5)
x
which (x>5)
which x(x>5)
b<-(4:6)
b
which (b>5)
b<-c(4:6)
b
which (b>5)
b>5
which [b>5]
setwd()
setwd("C:\Users\Michelle\Documents\GitHub\ProgrammingAssignment2\cachematrix.R")
setwd("C:\Users\Michelle\Documents\GitHub\ProgrammingAssignment2\cachematrix.R")
setwd(C:\Users\Michelle\Documents\GitHub\ProgrammingAssignment2\cachematrix.R)
setwd("C:\\Users\\Michelle\\Documents\\GitHub\\ProgrammingAssignment2\\cachematrix.R")
setwd("C:\\Users\\Michelle\\Documents\\GitHub\\ProgrammingAssignment2\\")
makeCacheMatrix <- function(x = matrix()) {
cm <- NULL
set <- function(y) {
x <<- y
cm <<- NULL
}
get <- function() x
setinverse <- function(inverse) cm <<- inverse
getinverse <- function() cm
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## This creates the cacheMatrix function
makeCacheMatrix <- function(x = matrix()) {  ##names function as makeCacheMatrix
cm <- NULL ##sets cm as Null
setmat <- function(y) {
x <<- y
cm <<- NULL
}
getmat <- function() x
setinverse <- function(inverse) cm <<- inverse
getinverse <- function() cm
list(setmat = setmat, getmat = getmat,
setinverse = setinverse,
getinverse = getinverse)
}
